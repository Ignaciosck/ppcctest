name: Run Tests and Deploy with Ansible

on:
  workflow_dispatch:
  
jobs:
  # test:
  #   runs-on: ubuntu-latest

  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v4

  #     - name: Build Test Image
  #       run: docker build -t ppcc:test -f docker/Dockerfile.testing .

  #     - name: Run Tests in Docker Container
  #       run: docker run ppcc:test npm test
  #       # Comprobar si el comando anterior se ejecutó con éxito
  #       continue-on-error: true

  #     - name: Check Test Results
  #       run: exit $?
        
  build-production-image:
    runs-on: ubuntu-latest
    # needs: test
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Build Production Image
        run: docker build -t ppcc:prod -f docker/Dockerfile.production .

      - name: Tag Production Image
        run: docker tag ppcc:prod ${{ secrets.DOCKER_HUB_USERNAME }}/ppcc:prod

      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKER_HUB_TOKEN }}" | docker login -u "${{ secrets.DOCKER_HUB_USERNAME }}" --password-stdin

      - name: Push to Docker Hub
        run: docker push ${{ secrets.DOCKER_HUB_USERNAME }}/ppcc:prod
  deploy:
    runs-on: ubuntu-latest
    needs: build-production-image
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Install Python and Pip
        run: |
          sudo apt update
          sudo apt install -y python3 python3-pip

      - name: Install Ansible
        run: pip3 install ansible
      - name: Set up Ansible
        run: |
          sudo apt-get update
          sudo apt-get remove -y containerd.io
      - name: Run Ansible playbook
        run: |
          ansible-playbook -e "docker_hub_username=${{ secrets.DOCKER_HUB_USERNAME }}" -e "docker_hub_token=${{ secrets.DOCKER_HUB_TOKEN }}" ansible/playbook.yml
        
